@using Entities
@using Business

<div class="form-group">
    <select class=" form-control" @onchange="OnChangeWarehouse">
        <option value="">Seleccione una bodega ...</option>
        @foreach (var warehouse in warehouses)
        {
            <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
        }
    </select>
</div>
<hr />
<EditForm Model="oInOut">
    <div class="form-group">
        <InputSelect class=" form-control" @bind-Value="oInOut.StorageId">
            <option value="">Seleccione un producto ...</option>
            @foreach (var storage in storages)
            {
                <option value="@storage.StorageId">@storage.Product.ProductName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Escriba la cantidad</label>
        <InputNumber class="form-control" @bind-Value="oInOut.Quantity" />
    </div>
    <div class="form-group">
        <label>Es una entrada?</label>
        <InputCheckbox class="form-control" @bind-Value="oInOut.IsInput" />
    </div>

    <input class="form-control" type="button" value="@buttonValue" @onclick="SaveInOut" />
</EditForm>

@code {
    InOutEntity oInOut = new InOutEntity();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<StorageEntity> storages = new List<StorageEntity>();

    string buttonValue => oInOut.IsInput ? "Registrar Entrada" : "Registrar Salida";

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.WarehousesList();
    }

    private void OnChangeWarehouse(ChangeEventArgs e)
    {
        var idWareHouse = e.Value.ToString();

        storages = B_Storage.StoragesProductsByWarehouse(idWareHouse);
    }

    private void SaveInOut()
    {
        
    }

}
